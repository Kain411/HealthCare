{"ast":null,"code":"import { Host } from './Host';\nconst API = `${Host}/appointments`;\nexport const getAppointmentsByDoctorID = async doctorID => {\n  try {\n    const response = await fetch(`${API}/${doctorID}`);\n    if (!response.ok) {\n      return {\n        \"success\": false,\n        \"error\": \"Error API\"\n      };\n    }\n    return await response.json();\n  } catch (error) {\n    return {\n      \"success\": false,\n      \"error\": \"Error: getAppointmentsByDoctorID\"\n    };\n  }\n};\nexport const getAppointmentsByPatientID = async patientID => {\n  try {\n    const response = await fetch(`${API}/patient/${patientID}`);\n    if (!response.ok) {\n      return {\n        \"success\": false,\n        \"error\": \"Error API\"\n      };\n    }\n    return await response.json();\n  } catch (error) {\n    return {\n      \"success\": false,\n      \"error\": \"Error: getAppointmentsByPatientID\"\n    };\n  }\n};\nexport const postNewAppointment = async data => {\n  try {\n    const response = await fetch(`${API}/newAppointment`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      return {\n        \"success\": false,\n        \"error\": \"Error API\"\n      };\n    }\n    return await response.json();\n  } catch (error) {\n    return {\n      \"success\": false,\n      \"error\": \"Error: postNewAppointment\"\n    };\n  }\n};","map":{"version":3,"names":["Host","API","getAppointmentsByDoctorID","doctorID","response","fetch","ok","json","error","getAppointmentsByPatientID","patientID","postNewAppointment","data","method","headers","body","JSON","stringify"],"sources":["D:/Tzei_Project_Pro/Project07-Healthcare/frontend/src/services/AppointmentService.js"],"sourcesContent":["import { Host } from './Host'\r\nconst API = `${Host}/appointments`\r\n\r\nexport const getAppointmentsByDoctorID = async (doctorID) => {\r\n    try {\r\n        const response = await fetch(`${API}/${doctorID}`)\r\n\r\n        if (!response.ok) {\r\n            return { \"success\": false, \"error\": \"Error API\" }\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n    catch (error) {\r\n        return { \"success\": false, \"error\": \"Error: getAppointmentsByDoctorID\" }\r\n    }\r\n}\r\n\r\nexport const getAppointmentsByPatientID = async (patientID) => {\r\n    try {\r\n        const response = await fetch(`${API}/patient/${patientID}`)\r\n\r\n        if (!response.ok) {\r\n            return { \"success\": false, \"error\": \"Error API\" }\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n    catch (error) {\r\n        return { \"success\": false, \"error\": \"Error: getAppointmentsByPatientID\" }\r\n    }\r\n}\r\n\r\nexport const postNewAppointment = async (data) => {\r\n    try {\r\n        const response = await fetch(`${API}/newAppointment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n        if (!response.ok) {\r\n            return { \"success\": false, \"error\": \"Error API\" }\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n    catch (error) {\r\n        return { \"success\": false, \"error\": \"Error: postNewAppointment\" }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,MAAMC,GAAG,GAAG,GAAGD,IAAI,eAAe;AAElC,OAAO,MAAME,yBAAyB,GAAG,MAAOC,QAAQ,IAAK;EACzD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,GAAG,IAAIE,QAAQ,EAAE,CAAC;IAElD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,OAAO;QAAE,SAAS,EAAE,KAAK;QAAE,OAAO,EAAE;MAAY,CAAC;IACrD;IAEA,OAAO,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,OAAO;MAAE,SAAS,EAAE,KAAK;MAAE,OAAO,EAAE;IAAmC,CAAC;EAC5E;AACJ,CAAC;AAED,OAAO,MAAMC,0BAA0B,GAAG,MAAOC,SAAS,IAAK;EAC3D,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,GAAG,YAAYS,SAAS,EAAE,CAAC;IAE3D,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;MACd,OAAO;QAAE,SAAS,EAAE,KAAK;QAAE,OAAO,EAAE;MAAY,CAAC;IACrD;IAEA,OAAO,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,OAAO;MAAE,SAAS,EAAE,KAAK;MAAE,OAAO,EAAE;IAAoC,CAAC;EAC7E;AACJ,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,IAAI,IAAK;EAC9C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,GAAG,iBAAiB,EAAE;MAClDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MACd,OAAO;QAAE,SAAS,EAAE,KAAK;QAAE,OAAO,EAAE;MAAY,CAAC;IACrD;IAEA,OAAO,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,OAAO;MAAE,SAAS,EAAE,KAAK;MAAE,OAAO,EAAE;IAA4B,CAAC;EACrE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}