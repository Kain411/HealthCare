{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tzei_Project_Pro\\\\Project07-Healthcare\\\\frontend\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { register, login } from \"../services/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [patient, setPatient] = useState({});\n  const handleRegister = async data => {\n    const result = await register(data);\n    if (result.success) {\n      setPatient(result.patient);\n    }\n    return result;\n  };\n  const handleLogin = async data => {\n    const result = await login(data);\n    if (result.success) {\n      setPatient(result.patient);\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      patient,\n      handleRegister,\n      handleLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"FdGpQf4B8rzxMImPOiAgvPsEhPs=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","register","login","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","patient","setPatient","handleRegister","data","result","success","handleLogin","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tzei_Project_Pro/Project07-Healthcare/frontend/src/context/UserContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { register, login } from \"../services/UserService\";\r\n\r\nexport const UserContext = createContext()\r\n\r\nexport const UserProvider = ({children}) => {\r\n\r\n    const [patient, setPatient] = useState({})\r\n\r\n    const handleRegister = async (data) => {\r\n        const result = await register(data)\r\n\r\n        if (result.success) {\r\n            setPatient(result.patient) \r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    const handleLogin = async (data) => {\r\n        const result = await login(data)\r\n\r\n        if (result.success) {\r\n            setPatient(result.patient)\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{ patient, handleRegister, handleLogin }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,QAAQ,EAAEC,KAAK,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAExC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMW,cAAc,GAAG,MAAOC,IAAI,IAAK;IACnC,MAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAACW,IAAI,CAAC;IAEnC,IAAIC,MAAM,CAACC,OAAO,EAAE;MAChBJ,UAAU,CAACG,MAAM,CAACJ,OAAO,CAAC;IAC9B;IAEA,OAAOI,MAAM;EACjB,CAAC;EAED,MAAME,WAAW,GAAG,MAAOH,IAAI,IAAK;IAChC,MAAMC,MAAM,GAAG,MAAMX,KAAK,CAACU,IAAI,CAAC;IAEhC,IAAIC,MAAM,CAACC,OAAO,EAAE;MAChBJ,UAAU,CAACG,MAAM,CAACJ,OAAO,CAAC;IAC9B;IAEA,OAAOI,MAAM;EACjB,CAAC;EAED,oBACIT,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,OAAO;MAAEE,cAAc;MAAEI;IAAY,CAAE;IAAAR,QAAA,EACjEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAb,EAAA,CA7BYF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}