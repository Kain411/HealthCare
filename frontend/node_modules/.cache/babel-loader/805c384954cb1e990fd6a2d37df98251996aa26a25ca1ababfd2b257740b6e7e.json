{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tzei_Project_Pro\\\\Project07-Healthcare\\\\frontend\\\\src\\\\context\\\\AppointmentContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { getAppointmentsByDoctorID, getAppointmentsByPatientID, postNewAppointment, deleteAppointment } from \"../services/AppointmentService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppointmentContext = /*#__PURE__*/createContext();\nexport const AppointmentProvider = ({\n  children\n}) => {\n  _s();\n  const [myAppointment, setMyAppointment] = useState([]);\n  const handleGetAppointmentByDoctorID = async doctorID => {\n    const result = await getAppointmentsByDoctorID(doctorID);\n    return result;\n  };\n  const handleGetAppointmentByPatientID = async patientID => {\n    const result = await getAppointmentsByPatientID(patientID);\n    if (result.success) {\n      setMyAppointment(result.appointments);\n    } else setMyAppointment([]);\n    return result;\n  };\n  const handlePostNewAppointment = async (patientID, data) => {\n    const result = await postNewAppointment(data);\n    if (result.success) {\n      await handleGetAppointmentByPatientID(patientID);\n    }\n    return result;\n  };\n  const handleDeleteAppointment = async (patientID, data) => {\n    const result = await deleteAppointment(data);\n    if (result.success) {\n      await handleGetAppointmentByPatientID(patientID);\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(AppointmentContext.Provider, {\n    value: {\n      myAppointment,\n      handleGetAppointmentByDoctorID,\n      handleGetAppointmentByPatientID,\n      handlePostNewAppointment,\n      handleDeleteAppointment\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(AppointmentProvider, \"n1IDlc3sykhH+HVfEO8vTos6KX8=\");\n_c = AppointmentProvider;\nvar _c;\n$RefreshReg$(_c, \"AppointmentProvider\");","map":{"version":3,"names":["createContext","useState","getAppointmentsByDoctorID","getAppointmentsByPatientID","postNewAppointment","deleteAppointment","jsxDEV","_jsxDEV","AppointmentContext","AppointmentProvider","children","_s","myAppointment","setMyAppointment","handleGetAppointmentByDoctorID","doctorID","result","handleGetAppointmentByPatientID","patientID","success","appointments","handlePostNewAppointment","data","handleDeleteAppointment","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tzei_Project_Pro/Project07-Healthcare/frontend/src/context/AppointmentContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { getAppointmentsByDoctorID, getAppointmentsByPatientID, postNewAppointment, deleteAppointment } from \"../services/AppointmentService\";\r\n\r\nexport const AppointmentContext = createContext()\r\n\r\nexport const AppointmentProvider = ({children}) => {\r\n\r\n    const [myAppointment, setMyAppointment] = useState([])\r\n\r\n    const handleGetAppointmentByDoctorID = async (doctorID) => {\r\n        const result = await getAppointmentsByDoctorID(doctorID)\r\n\r\n        return result\r\n    }\r\n\r\n    const handleGetAppointmentByPatientID = async (patientID) => {\r\n        const result = await getAppointmentsByPatientID(patientID)\r\n\r\n        if (result.success) {\r\n            setMyAppointment(result.appointments)\r\n        }\r\n        else setMyAppointment([])\r\n\r\n        return result\r\n    }\r\n\r\n    const handlePostNewAppointment = async (patientID, data) => {\r\n        const result = await postNewAppointment(data)\r\n\r\n        if (result.success) {\r\n            await handleGetAppointmentByPatientID(patientID)\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    const handleDeleteAppointment = async (patientID, data) => {\r\n        const result = await deleteAppointment(data)\r\n\r\n        if (result.success) {\r\n            await handleGetAppointmentByPatientID(patientID)\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <AppointmentContext.Provider value={{ myAppointment, handleGetAppointmentByDoctorID, handleGetAppointmentByPatientID, handlePostNewAppointment, handleDeleteAppointment }}>\r\n            {children}\r\n        </AppointmentContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,yBAAyB,EAAEC,0BAA0B,EAAEC,kBAAkB,EAAEC,iBAAiB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9I,OAAO,MAAMC,kBAAkB,gBAAGR,aAAa,CAAC,CAAC;AAEjD,OAAO,MAAMS,mBAAmB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAE/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,8BAA8B,GAAG,MAAOC,QAAQ,IAAK;IACvD,MAAMC,MAAM,GAAG,MAAMd,yBAAyB,CAACa,QAAQ,CAAC;IAExD,OAAOC,MAAM;EACjB,CAAC;EAED,MAAMC,+BAA+B,GAAG,MAAOC,SAAS,IAAK;IACzD,MAAMF,MAAM,GAAG,MAAMb,0BAA0B,CAACe,SAAS,CAAC;IAE1D,IAAIF,MAAM,CAACG,OAAO,EAAE;MAChBN,gBAAgB,CAACG,MAAM,CAACI,YAAY,CAAC;IACzC,CAAC,MACIP,gBAAgB,CAAC,EAAE,CAAC;IAEzB,OAAOG,MAAM;EACjB,CAAC;EAED,MAAMK,wBAAwB,GAAG,MAAAA,CAAOH,SAAS,EAAEI,IAAI,KAAK;IACxD,MAAMN,MAAM,GAAG,MAAMZ,kBAAkB,CAACkB,IAAI,CAAC;IAE7C,IAAIN,MAAM,CAACG,OAAO,EAAE;MAChB,MAAMF,+BAA+B,CAACC,SAAS,CAAC;IACpD;IAEA,OAAOF,MAAM;EACjB,CAAC;EAED,MAAMO,uBAAuB,GAAG,MAAAA,CAAOL,SAAS,EAAEI,IAAI,KAAK;IACvD,MAAMN,MAAM,GAAG,MAAMX,iBAAiB,CAACiB,IAAI,CAAC;IAE5C,IAAIN,MAAM,CAACG,OAAO,EAAE;MAChB,MAAMF,+BAA+B,CAACC,SAAS,CAAC;IACpD;IAEA,OAAOF,MAAM;EACjB,CAAC;EAED,oBACIT,OAAA,CAACC,kBAAkB,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,aAAa;MAAEE,8BAA8B;MAAEG,+BAA+B;MAAEI,wBAAwB;MAAEE;IAAwB,CAAE;IAAAb,QAAA,EACrKA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEtC,CAAC;AAAAlB,EAAA,CA9CYF,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}