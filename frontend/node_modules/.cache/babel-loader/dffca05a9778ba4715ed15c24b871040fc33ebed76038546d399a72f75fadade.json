{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tzei_Project_Pro\\\\Project07-Healthcare\\\\frontend\\\\src\\\\context\\\\ChatboxContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { getDiseases, getSymptoms } from \"../services/ChatboxService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatboxContext = /*#__PURE__*/createContext();\nexport const ChatboxProvider = ({\n  children\n}) => {\n  _s();\n  const [symptoms, setSymptoms] = useState([]);\n  const handleGetSymptoms = async () => {\n    const result = await getSymptoms();\n    if (result.success) {\n      setSymptoms(result.symptoms);\n    }\n    return result;\n  };\n  const handleGetDiseases = async data => {\n    const result = await getDiseases(data);\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(ChatboxContext.Provider, {\n    value: {\n      symptoms,\n      handleGetSymptoms,\n      handleGetDiseases\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatboxProvider, \"9zL5FDWqY6S6IQljBV37p4Od3lg=\");\n_c = ChatboxProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatboxProvider\");","map":{"version":3,"names":["createContext","useState","getDiseases","getSymptoms","jsxDEV","_jsxDEV","ChatboxContext","ChatboxProvider","children","_s","symptoms","setSymptoms","handleGetSymptoms","result","success","handleGetDiseases","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tzei_Project_Pro/Project07-Healthcare/frontend/src/context/ChatboxContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { getDiseases, getSymptoms } from \"../services/ChatboxService\";\r\n\r\nexport const ChatboxContext = createContext()\r\n\r\nexport const ChatboxProvider = ({children}) => {\r\n\r\n    const [symptoms, setSymptoms] = useState([])\r\n\r\n    const handleGetSymptoms = async () => {\r\n        const result = await getSymptoms()\r\n\r\n        if (result.success) {\r\n            setSymptoms(result.symptoms)\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    const handleGetDiseases = async (data) => {\r\n        const result = await getDiseases(data)\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <ChatboxContext.Provider value={{ symptoms, handleGetSymptoms, handleGetDiseases }}>\r\n            {children}\r\n        </ChatboxContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,OAAO,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAE3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,MAAM,GAAG,MAAMV,WAAW,CAAC,CAAC;IAElC,IAAIU,MAAM,CAACC,OAAO,EAAE;MAChBH,WAAW,CAACE,MAAM,CAACH,QAAQ,CAAC;IAChC;IAEA,OAAOG,MAAM;EACjB,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,IAAI,IAAK;IACtC,MAAMH,MAAM,GAAG,MAAMX,WAAW,CAACc,IAAI,CAAC;IAEtC,OAAOH,MAAM;EACjB,CAAC;EAED,oBACIR,OAAA,CAACC,cAAc,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,QAAQ;MAAEE,iBAAiB;MAAEG;IAAkB,CAAE;IAAAP,QAAA,EAC9EA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAAb,EAAA,CAzBYF,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}