{"ast":null,"code":"import { Host } from './Host';\nconst API = `${Host}/patients`;\nexport const getPatientByUsername = async username => {\n  try {\n    const response = await fetch(`${API}/${username}`);\n    if (!response.ok) {\n      return {\n        \"success\": false,\n        \"error\": \"Error API\"\n      };\n    }\n    return await response.json();\n  } catch (error) {\n    return {\n      \"success\": false,\n      \"error\": \"Error: getPatientByUsername\"\n    };\n  }\n};\nexport const postNewPatient = async data => {\n  try {\n    const response = await fetch(`${API}/newPatient`);\n    if (!response.ok) {\n      return {\n        \"success\": false,\n        \"error\": \"Error API\"\n      };\n    }\n    return await response.json();\n  } catch (error) {\n    return {\n      \"success\": false,\n      \"error\": \"Error: postNewPatient\"\n    };\n  }\n};","map":{"version":3,"names":["Host","API","getPatientByUsername","username","response","fetch","ok","json","error","postNewPatient","data"],"sources":["D:/Tzei_Project_Pro/Project07-Healthcare/frontend/src/services/PatientService.js"],"sourcesContent":["import { Host } from './Host'\r\nconst API = `${Host}/patients`\r\n\r\nexport const getPatientByUsername = async (username) => {\r\n    try {\r\n        const response = await fetch(`${API}/${username}`)\r\n\r\n        if (!response.ok) {\r\n            return { \"success\": false, \"error\": \"Error API\" }\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n    catch (error) {\r\n        return { \"success\": false, \"error\": \"Error: getPatientByUsername\" }\r\n    }\r\n}\r\n\r\nexport const postNewPatient = async (data) => {\r\n    try {\r\n        const response = await fetch(`${API}/newPatient`)\r\n\r\n        if (!response.ok) {\r\n            return { \"success\": false, \"error\": \"Error API\" }\r\n        }\r\n\r\n        return await response.json()\r\n    }\r\n    catch (error) {\r\n        return { \"success\": false, \"error\": \"Error: postNewPatient\" }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,MAAMC,GAAG,GAAG,GAAGD,IAAI,WAAW;AAE9B,OAAO,MAAME,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,GAAG,IAAIE,QAAQ,EAAE,CAAC;IAElD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,OAAO;QAAE,SAAS,EAAE,KAAK;QAAE,OAAO,EAAE;MAAY,CAAC;IACrD;IAEA,OAAO,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,OAAO;MAAE,SAAS,EAAE,KAAK;MAAE,OAAO,EAAE;IAA8B,CAAC;EACvE;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC1C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,GAAG,aAAa,CAAC;IAEjD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MACd,OAAO;QAAE,SAAS,EAAE,KAAK;QAAE,OAAO,EAAE;MAAY,CAAC;IACrD;IAEA,OAAO,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,OAAO;MAAE,SAAS,EAAE,KAAK;MAAE,OAAO,EAAE;IAAwB,CAAC;EACjE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}