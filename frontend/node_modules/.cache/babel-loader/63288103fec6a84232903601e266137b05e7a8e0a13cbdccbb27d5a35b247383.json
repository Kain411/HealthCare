{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tzei_Project_Pro\\\\Project07-Healthcare\\\\frontend\\\\src\\\\context\\\\MedicalRecordContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { getMedicalRecordsByPatientID } from \"../services/MedicalRecordService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MedicalRecordContext = /*#__PURE__*/createContext();\nexport const MedicalRecordProvider = ({\n  children\n}) => {\n  _s();\n  const [medicalRecords, serMedicalRecords] = useState([]);\n  const handleGetMedicalRecordsByPatientID = async patientID => {\n    const result = await getMedicalRecordsByPatientID(patientID);\n    if (result.success) {\n      serMedicalRecords(result.medical_records);\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(MedicalRecordContext.Provider, {\n    value: {\n      medicalRecords,\n      handleGetMedicalRecordsByPatientID\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(MedicalRecordProvider, \"THnQmdGPSpSw6d+XCRFp5A00T9s=\");\n_c = MedicalRecordProvider;\nvar _c;\n$RefreshReg$(_c, \"MedicalRecordProvider\");","map":{"version":3,"names":["createContext","useState","getMedicalRecordsByPatientID","jsxDEV","_jsxDEV","MedicalRecordContext","MedicalRecordProvider","children","_s","medicalRecords","serMedicalRecords","handleGetMedicalRecordsByPatientID","patientID","result","success","medical_records","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tzei_Project_Pro/Project07-Healthcare/frontend/src/context/MedicalRecordContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { getMedicalRecordsByPatientID } from \"../services/MedicalRecordService\";\r\n\r\nexport const MedicalRecordContext = createContext()\r\n\r\nexport const MedicalRecordProvider = ({children}) => {\r\n    \r\n    const [medicalRecords, serMedicalRecords] = useState([])\r\n\r\n    const handleGetMedicalRecordsByPatientID = async (patientID) => {\r\n        const result = await getMedicalRecordsByPatientID(patientID)\r\n\r\n        if (result.success) {\r\n            serMedicalRecords(result.medical_records)\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <MedicalRecordContext.Provider value={{ medicalRecords, handleGetMedicalRecordsByPatientID }}>\r\n            {children}\r\n        </MedicalRecordContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,4BAA4B,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,OAAO,MAAMC,oBAAoB,gBAAGL,aAAa,CAAC,CAAC;AAEnD,OAAO,MAAMM,qBAAqB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAEjD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMU,kCAAkC,GAAG,MAAOC,SAAS,IAAK;IAC5D,MAAMC,MAAM,GAAG,MAAMX,4BAA4B,CAACU,SAAS,CAAC;IAE5D,IAAIC,MAAM,CAACC,OAAO,EAAE;MAChBJ,iBAAiB,CAACG,MAAM,CAACE,eAAe,CAAC;IAC7C;IAEA,OAAOF,MAAM;EACjB,CAAC;EAED,oBACIT,OAAA,CAACC,oBAAoB,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,cAAc;MAAEE;IAAmC,CAAE;IAAAJ,QAAA,EACxFA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAExC,CAAC;AAAAb,EAAA,CAnBYF,qBAAqB;AAAAgB,EAAA,GAArBhB,qBAAqB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}